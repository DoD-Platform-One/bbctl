# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

# GitLab environment
# An API token must be provided in the GITLAB_TOKEN env var
gitlab_urls:
  api: https://repo1.dso.mil/api/v4/
  download: https://repo1.dso.mil

  use_package_registry: true # Upload release artifacts in the registry instead of as attachements

# Gitlab project settings for release
release:
  gitlab:
    name: "bbctl"
    owner: "big-bang/product/packages"

  # Release notes
  mode: append

# Pre-release steps
# before:
  # hooks:

# Multi-environment build settings
builds:
  - ldflags:
      - -X repo1.dso.mil/big-bang/product/packages/bbctl/static.buildDate={{.Date}}
      # still needs testing to see if this results in what we want
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

# Define archive release artifacts
archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: "{{ .ProjectName }}-{{.Version}}-{{- tolower .Os }}-{{- if eq .Arch \"amd64\" }}x86-64{{- else }}{{ .Arch }}{{ end }}{{- if .Arm }}v{{ .Arm }}{{ end }}"
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

# Define changelog
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chart:"

# Sign binary release artifacts
# Disabled due to issues with GitLab file uploads for signature files
# binary_signs: 
#  - output: true
#    signature: '${artifact}-{{.Version}}-{{ tolower .Os }}-{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}-{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}.sig'

# Sign archive release artifacts
signs:
  - artifacts: checksum
    output: true

# Generate SBOMs
sboms:
  - artifacts: archive
